#cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, rD)
rD
GetHTMLLogTable = function(Season, GameWeek, rD){
htmlsession <- rD[["client"]]
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
#cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, rD)
htmlsession <- rD[["client"]]
htmlsession
GetHTMLLogTable = function(Season, GameWeek, rD){
htmlsession <- rD[["client"]]
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
#cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, rD)
htmlsession <- rD[["client"]]
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
?rsDriver
rD[["server"]]$stop()
rm(rD)
gc(rD)
rD = rsDriver(port = 4569L)
rD = rsDriver(port = 4568L)
rm(list=ls())
library("lme4")
library("nnet")
library("httr")
library("jsonlite")
library("RODBC")
library("scales")
library("rvest")
library("RSelenium")
dblive = odbcDriverConnect('driver={SQL Server};server=localhost;database=FantasyFootball', case="nochange")
dbstg = odbcDriverConnect('driver={SQL Server};server=localhost;database=FantasyFootballStaging', case="nochange")
rD = rsDriver(port = 4568L)
GetHTMLLogTable = function(Season, GameWeek, rD){
htmlsession <- rD[["client"]]
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
#cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, rD)
htmlsession <- rD[["client"]]
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
#cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, htmlsession)
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, htmlsession)
Q
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, htmlsession)
?htmlsession$addCookie
?htmlsession$phantomExecute
htmlsession$getAllCookies()
rD[["server"]]$stop()
rD = rsDriver(port = 4568L)
rD[["server"]]$stop()
library("RSelenium")
rD = rsDriver(port = 4568L)
ses = htmlsession()
ses = html_session()
url
GameWeek=1
Season=1
ses = html_session()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
url
Season=21
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
ses = html_session(url)
ses
read_html(ses)[[1]]
read_html(ses)
read_html(ses)[2]
tablepage = read_html(ses)
tablepage
html_nodes(tablepage, ".tableBodyContainer")
html_nodes(tablepage, ".tableBodyContainer")
rD = rsDriver(port = 4568L, browser='phantomjs')
htmlsession <- rD[["client"]]
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
while(length(table)==0){
cat("waiting", sep='\n')
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
#cat(" Page Load Done", sep='\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
GetHTMLLogTable(21,1, htmlsession)
readLines("./scripts/LeagueLogDelta.sql")
dbpull=dblive
sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql")
}
dbpull
sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
i=1
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i])
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)
rD = rsDriver(port = 4568L, browser='phantomjs')
htmlsession <- rD[["client"]]
gc(rD)
rD = rsDriver(port = 4568L, browser='phantomjs')
rm(rD)
library("RSelenium")
rD = rsDriver(port = 4568L, browser='phantomjs')
rD = rsDriver(port = 4569L, browser='phantomjs')
htmlsession <- rD[["client"]]
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
cat("Page Loading .")
while(length(table)==0){
cat(" .")
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
cat('\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession))
source("./utilities/SaveData.R")
dbpush=dbstg
Log = data.frame()
for(i in 1:nrow(ToLoad)){
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
Log
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = T)
rD[["server"]]$stop()
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = T)
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
StageLog = function(dbpull, dbpush){
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = T)
}
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
rD = rsDriver(port = 4569L, browser='phantomjs')
htmlsession <- rD[["client"]]
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = T)
sqlQuery(dbpush, "SELECT * FROM S_FactLeagueLog")
library("httr")
library("jsonlite")
library("RODBC")
library("scales")
library("rvest")
library("RSelenium")
dblive = odbcDriverConnect('driver={SQL Server};server=localhost;database=FantasyFootball', case="nochange")
dbstg = odbcDriverConnect('driver={SQL Server};server=localhost;database=FantasyFootballStaging', case="nochange")
rD = rsDriver(port = 4569L, browser='phantomjs')
htmlsession <- rD[["client"]]
StageLog = function(dbpull, dbpush){
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
}
GetHTMLLogTable = function(Season, GameWeek, htmlsession){
Log = data.frame()
url =     gsub("`Season`", Season, gsub("`GameWeek`", GameWeek, "https://www.premierleague.com/tables?co=1&se=`Season`&mw=1-`GameWeek`&ha=-1"))
htmlsession$navigate(url)
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
cat("Page Loading .")
while(length(table)==0){
cat(" .")
tablepage = read_html(htmlsession$getPageSource()[[1]])
tables = html_nodes(tablepage, ".tableBodyContainer")
table = html_children(tables)[which(html_attr(html_children(tables), "data-compseason")==Season)]
}
cat('\n')
names = html_attr(html_nodes(tables, "tr"), "data-filtered-table-row-name")[seq(1,39,2)]
rowdetails = data.frame()
for(i in seq(1,20,1)){
rowdetails = rbind(rowdetails, data.frame(t(html_text(html_nodes(table[i], 'td')[4:11]))))
}
Log = rbind(Log, cbind(Team = names, Position= 1:20, rowdetails))
names(Log) = c("Team", "Position", "Played", "Won", "Drawn", "Lost", "GoalsFor", "GoalsAgainst", "GoalDifference", "Points")
return(Log)
}
pull=dblive
dbpull=dblive
dbpush=dbstg
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
sqlQuery(dbpush, "EXEC dbo.LoadLeagueLog")
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
sqlQuery(dbpush, "EXEC dbo.LoadLeagueLog")
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
source('./Staging/components/Team_Player_Events_Position_Detail.R')
Details = PlayerList()
Details$teams
StageLog = function(dbpull, dbpush){
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
sqlQuery(dbpush, "EXEC dbo.LoadLeagueLog")
return(TRUE)
}
source('./StageLog.R')
source('./Staging/StageLog.R')
LogStaging = function(dbpull, dbpush){
ToLoad = sqlQuery(dbpull, readLines("./scripts/LeagueLogDelta.sql"))
Log = data.frame()
for(i in 1:nrow(ToLoad)){
cat(i, sep=" ")
Log = rbind(Log, cbind(Season = ToLoad$SeasonURLCode[i],
GameWeek = ToLoad$GameWeekID[i],
GetHTMLLogTable(ToLoad$SeasonURLCode[i], ToLoad$GameWeekID[i], htmlsession)))
}
SaveData(dbpush, Log, "S_FactLeagueLog", Insert = F)
sqlQuery(dbpush, "EXEC dbo.LoadLeagueLog")
return(TRUE)
}
Teams = Details$teams
Teams
View(Teams)
Teams$current_event_fixture = Teams$next_event_fixture = NULL
Teams[c("strength_overall_home", "strength_overall_away", "strength_attack_home", "strength_attack_away", "strength_defence_home", "strength_defence_away")]
Teams[c("name", "strength_overall_home", "strength_overall_away", "strength_attack_home", "strength_attack_away", "strength_defence_home", "strength_defence_away")]
Teams[c("name", "code", "strength_overall_home", "strength_overall_away", "strength_attack_home", "strength_attack_away", "strength_defence_home", "strength_defence_away")]
dbcon
dbcon=dbstg
SaveData(dbcon,
Teams[c("name", "code", "strength_overall_home", "strength_overall_away", "strength_attack_home", "strength_attack_away", "strength_defence_home", "strength_defence_away")],
'S_FactTeamForm',
Insert=F)
Details$elements
#Extract the required dimensions
Players = Details$elements
Positions = Details$element_types
Teams = Details$teams
#Flatten out player and position
Players = merge(Players, Positions, by.x = 'element_type', by.y = 'id')
#Flatten out for team as well
Players = merge(Players, Teams, by.x = 'team', by.y = 'id')
#Exclude the fixture columns
Players$current_event_fixture = Players$next_event_fixture = NULL
View(Players)
SaveData(dbcon, Players, 'S_Players', Insert=F)
FantasyTeamStaging
FantasyTeamStaging = function(id){
url = 'https://fantasy.premierleague.com/drf/element-summary/'
fetch_url = paste0(url, id)
return(fromJSON(fetch_url))
}
FantasyTeamStaging(!)
FantasyTeamStaging(1)
x=FantasyTeamStaging(1)
names(x)
x$fixtures_summary
x$history_summary
names(x)
x$explain
x$history_past
x$fixtures_summary
Details$events
x$explain
x$history
y=x$history
View(y)
Details$elements
url = "https://fantasy.premierleague.com/drf/fixtures/?event=34"
x = fromJSON(url)
names(x)
x
url = "https://fantasy.premierleague.com/drf/fixtures/?event=1"
x = fromJSON(url)
x
View(x)
i=1
url = paste0("https://fantasy.premierleague.com/drf/fixtures/?event=", i)
cbind(GameWeek= i, fromJSON(url))
Fixtures = cbind(GameWeek= i, fromJSON(url))
View(Fixtures)
names(fromJSON(url)-)
names(fromJSON(url))
cbind(GameWeek= i, fromJSON(url)[c("kickoff_time_formatted", "kickoff_time", "team_a", "team_h", "code", "team_a_score", "team_h_score", "event")])
=2
i=2
url = paste0("https://fantasy.premierleague.com/drf/fixtures/?event=", i)
Fixtures = cbind(GameWeek= i, fromJSON(url)[c("kickoff_time_formatted", "kickoff_time", "team_a", "team_h", "code", "team_a_score", "team_h_score", "event")])
Match = data.frame()
for(i in 1:GameWeekCount){
url = paste0("https://fantasy.premierleague.com/drf/fixtures/?event=", i)
Fixtures = cbind(GameWeek= i, fromJSON(url)[c("kickoff_time_formatted", "kickoff_time", "team_a", "team_h", "code", "team_a_score", "team_h_score", "event")])
Match  = rbind(Match,Fixtures)
}
GameWeekCount=38
Match = data.frame()
for(i in 1:GameWeekCount){
url = paste0("https://fantasy.premierleague.com/drf/fixtures/?event=", i)
Fixtures = cbind(GameWeek= i, fromJSON(url)[c("kickoff_time_formatted", "kickoff_time", "team_a", "team_h", "code", "team_a_score", "team_h_score", "event")])
Match  = rbind(Match,Fixtures)
}
sqlSave(dbstg, Match, 'S_FactLeagueMatches')
Details$teams
spanne = Details$teams
View(spanne)
SaveData(dbstg, Match, 'S_FactLeagueMatches', Insert = F)
SaveData(dbstg, Match, 'S_FactLeagueMatches', Insert = F)
