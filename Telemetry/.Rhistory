?getMap
plot(newmap, xlim = lat, ylim = lon, asp = 1)
plot(newmap, xlim = c(-158, 145), ylim = c(13,54), asp = 1)
plot(newmap, xlim = c(-158, -145), ylim = c(13,54), asp = 1)
plot(newmap, xlim = c(-200, -100), ylim = c(13,54), asp = 1)
plot(newmap, xlim = c(-200, 0), ylim = c(13,54), asp = 1)
plot(newmap, xlim = c(-200, -100), ylim = c(13,54), asp = 1)
map <- get_map(location = 'America', zoom = 4)
ggmap(map)
map <- get_map(location = 'America', zoom = 1)
ggmap(map)
map <- get_map(location = 'America', zoom = 2)
ggmap(map)
map <- get_map(location = 'America', zoom = 3)
ggmap(map)
map <- get_map(location = 'America', zoom = 5)
ggmap(map)
map <- get_map(location = 'America', zoom = 4)
ggmap(map)
unique(states$group)
states$subregion
unique(states$subregion)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
ggThemeAssist:::ggThemeAssistAddin()
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) + theme(axis.ticks = element_line(linetype = "blank"),
axis.title = element_text(colour = NA),
axis.text = element_text(size = 0, colour = NA,
hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
labs <- data.frame(
long = c(-122.064873, -122.306417),
lat = c(36.951968, 47.644855),
names = c("SWFSC-FED", "NWFSC"),
stringsAsFactors = FALSE
)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
geom_point(data = labs, aes(x = long, y = lat), color = "yellow", size = 4) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), color = "white") +
geom_point(data = labs, aes(x = long, y = lat), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = labs, aes(x = long, y = lat), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Fault, aes(x = Longitude, y = Latitiude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Fault, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
DealerCenters
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = DealerCenters, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
k=6
cluster = kmeans(Fault[,2:3],k)
centers = cbind(ID = 1:k, data.frame(cluster$centers))
DealerClusterDistance = DistanceMatrix(Dealers, centers)
DealerCenters = Dealers[apply(DealerClusterDistance[,2:nrow(Dealers)], 1, which.min),]
DealerCenters
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = DealerCenters, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
Fault = ExtractFault(dbcon)
#CalculateDealer clusters
DealerCluster = function(Dealers, Fault, k=3){
#DistMatrix = DealerFaultDistanceMatrix(Dealers, Fault)
cluster = kmeans(Fault[,2:3],k)
centers = cbind(ID = 1:k, data.frame(cluster$centers))
DealerClusterDistance = DistanceMatrix(Dealers, centers)
DealerCenters = Dealers[apply(DealerClusterDistance[,2:nrow(Dealers)], 1, which.min),]
FaultCenterDistance = DistanceMatrix(DealerCenters, Fault)
# TotalDistances = data.frame(Dealers = names(DistMatrix)[2:(nrow(Dealers)+1)], Distances = apply(DistMatrix,2,sum)[2:(nrow(Dealers)+1)])
# TotalDistances = TotalDistances[order(TotalDistances$Distances),]
return(list(DealerCenters,FaultCenterDistance))
}
DealerCluster(Dealers, Fault, k=6)
ClusterResults = DealerCluster(Dealers, Fault, k=6)
PlotFaults = function(Points){
# # getting the map
# mapgilbert <- get_map(location = c(lon = mean(Fault$Longitude), lat = mean(Fault$Latitude)), zoom = 4,
#                       maptype = "satellite", scale = 2)
#
# # plotting the map with some points on it
# ggmap(mapgilbert) +
#     geom_point(data = Faults, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.8), size = 5, shape = 21) +
#     guides(fill=FALSE, alpha=FALSE, size=FALSE)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
}
#df <- as.data.frame(cbind(lon,lat))
# PlotFaults(Dealers)
#
# labs <- data.frame(
#     long = c(-122.064873, -122.306417),
#     lat = c(36.951968, 47.644855),
#     names = c("SWFSC-FED", "NWFSC"),
#     stringsAsFactors = FALSE
# )
MapPlot = function(Points){
# # getting the map
# mapgilbert <- get_map(location = c(lon = mean(Fault$Longitude), lat = mean(Fault$Latitude)), zoom = 4,
#                       maptype = "satellite", scale = 2)
#
# # plotting the map with some points on it
# ggmap(mapgilbert) +
#     geom_point(data = Faults, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.8), size = 5, shape = 21) +
#     guides(fill=FALSE, alpha=FALSE, size=FALSE)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
}
ClusterResults[[1]]
MapPlot(ClusterResults[[1]])
names(ClusterResults[[2]])
MapPlot(Fault)
View(Fault)
Fault = ExtractFault(dbcon)
ClusterResults[[1]]
MapPlot = function(Points){
# # getting the map
# mapgilbert <- get_map(location = c(lon = mean(Fault$Longitude), lat = mean(Fault$Latitude)), zoom = 4,
#                       maptype = "satellite", scale = 2)
#
# # plotting the map with some points on it
# ggmap(mapgilbert) +
#     geom_point(data = Faults, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.8), size = 5, shape = 21) +
#     guides(fill=FALSE, alpha=FALSE, size=FALSE)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
geom_text(aes(label=Name),hjust=0, vjust=0) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
}
#df <- as.data.frame(cbind(lon,lat))
# PlotFaults(Dealers)
#
# labs <- data.frame(
#     long = c(-122.064873, -122.306417),
#     lat = c(36.951968, 47.644855),
#     names = c("SWFSC-FED", "NWFSC"),
#     stringsAsFactors = FALSE
# )
MapPlot(ClusterResults[[1]])
ClusterResults[[1]]
MapPlot = function(Points){
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
geom_text(data = Points, aes(label=Name),hjust=0, vjust=0) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
}
MapPlot(ClusterResults[[1]])
?geom_text
MapPlot = function(Points){
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
geom_text(aes(label=Points$Name),hjust=0, vjust=0) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
}
MapPlot(ClusterResults[[1]])
library(plotly)
Points=ClusterResults[[1]]
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
geom_text(aeslibrary(plotly),hjust=0, vjust=0) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
plotly(p)
plotly(p)
Sys.setenv(plotly_username = "wawatah")
plotly(p)
Sys.setenv(plotly_username = 'wawatah')
plotly(p)
plot_ly(p)
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
plot_ly(p)
ggplotly(p)
?ggplotly
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
}
MapPlot(ClusterResults[[1]])
source("./config/config.R")
source("./services/CalcDistance.R")
source("./services/ExtractDealers.R")
source("./services/ExtractFault.R")
source("./services/DealerCluster.R")
source("./services/DealerFaultDistanceMatrix.R")
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
}
Dealers = ExtractDealers(dbcon)
Fault = ExtractFault(dbcon)
#CalculateDealer clusters
DealerCluster = function(Dealers, Fault, k=3){
#DistMatrix = DealerFaultDistanceMatrix(Dealers, Fault)
cluster = kmeans(Fault[,2:3],k)
centers = cbind(ID = 1:k, data.frame(cluster$centers))
DealerClusterDistance = DistanceMatrix(Dealers, centers)
DealerCenters = Dealers[apply(DealerClusterDistance[,2:nrow(Dealers)], 1, which.min),]
FaultCenterDistance = DistanceMatrix(DealerCenters, Fault)
# TotalDistances = data.frame(Dealers = names(DistMatrix)[2:(nrow(Dealers)+1)], Distances = apply(DistMatrix,2,sum)[2:(nrow(Dealers)+1)])
# TotalDistances = TotalDistances[order(TotalDistances$Distances),]
return(list(DealerCenters,FaultCenterDistance))
}
ClusterResults = DealerCluster(Dealers, Fault, k=6)
MapPlot(ClusterResults[[1]])
View(ExtractFault)
View(Dealers)
View(Fault)
MapPlot(Fault)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
return(p)
}
pl = MapPlot(ClusterResults[[1]])
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(ggplotly(p))
}
pl = MapPlot(ClusterResults[[1]])
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
}
pl = MapPlot(ClusterResults[[1]])
plotly(pl)
plot_ly(pl)
ggplotly(pl)
MapPlot(ClusterResults[[1]])
pl = MapPlot(ClusterResults[[1]])
plot(pl)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(p)
}
pl = MapPlot(ClusterResults[[1]])
ggplotly(pl)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(ggplotyly(p))
}
pl = MapPlot(ClusterResults[[1]])
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(ggploty(p))
}
pl
pl
Faults[1:10,]
Fault[1:10,]
Points = Fault[sample(1:nrow(Fault), 10, replace=F),]
Points
x = Fault[sample(1:nrow(Fault), 100, replace=F),]
Points = Fault[sample(1:nrow(Fault), 100, replace=F),]
pl + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
""
pl + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1)
pl = MapPlot(ClusterResults[[1]])
pl + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "red", size = 1)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(ggplotly(p))
}
ClusterResults
MapPointsOverlay = function(p, Points, color){
p = p + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = color, size = 1)
return(ggplotly(p))
}
pl = MapPlot(ClusterResults[[1]])
Points = Fault[sample(1:nrow(Fault), 100, replace=F),]
p = MapPointsOverlay(pl, Points, "red")
p
pl = MapPlot(ClusterResults[[1]])
Points = Fault[sample(1:nrow(Fault), 100, replace=F),]
p=pl
p + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = color, size = 1)
color="red"
p + geom_point(data = Points, aes(x = Longitude, y = Latitude), color = color, size = 1)
p
class(pl)
pl$long
names(pl)
pl+geom_point(data = Points, aes(x = Longitude, y = Latitude), color = color, size = 1)
MapPlot = function(Points){
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
return(p)
}
p = MapPlot(ClusterResults[[1]])
ggplotly(p)
p = MapPointsOverlay(p, Points, "red")
p
View(Points)
View(Dealers)
Names = c("Name")
Dealers[Names]
Names = c("Region")
Points[Names]
paste("Name : "  Points[Names])
paste("Name : "  Points[Names])
paste("Name : ",  Points[Names])
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", text = paste("Name : ",  Points[Names]), size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
p = ggplot(data = states, text = paste("Name : ",  Points[Names])) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
p = ggplot(data = states, aes(text = paste("Name : ",  Points[Names]))) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
p = ggplot(data = states, aes(text = paste("Name : ",  Names))) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Names)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
Names
Points[Names]
Points
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p)
??ggplot
?ggplot
?aes
ggplotly(p, hoverinfo="text")
p$mapping
p$data
p = ggplot(data = states, aes(text=NULL)) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p, hoverinfo="text")
?ggplotly
p = ggplot(data = states, aes(text=NULL)) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p, hoverinfo="text")
p = ggplot(data = states, aes(text=NULL)) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p, tooltip = c("Latitude", "Longitude", "Region"))
return(p)
p = ggplot(data = states, aes(text=NULL)) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p, tooltip = c("Latitude", "Longitude", "Region"))
p
names(p)
p$labels
p = ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, group = group), fill = 'grey', color = "white") +
geom_point(data = Points, aes(x = Longitude, y = Latitude, text = paste("Name : ",  Region)), color = "blue", size = 1) +
coord_fixed(1.3) +
guides(fill=FALSE) +
theme(axis.ticks = element_line(linetype = "blank"), axis.title = element_text(colour = NA), axis.text = element_text(size = 0, colour = NA, hjust = 0, vjust = 0), panel.background = element_rect(fill = NA))
ggplotly(p, tooltip = c("Latitude", "Longitude", "Region"))
p$plot_env
p$guides
